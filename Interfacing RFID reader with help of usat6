#include "stm32f4xx.h"
void USART_INIT() {
    // Enable clocks
	RCC->CR |=(1<<0);
    RCC->AHB1ENR |= (1 << 2);  // GPIOC clock enable
    RCC->APB2ENR |= (1 << 5);   // USART6 clock enable

    // PC6 as TX (AF mode)
    GPIOC->MODER &= ~(3 << (6 * 2));
    GPIOC->MODER |= (2 << (6 * 2));
    GPIOC->AFR[0] |= (8 << (6 * 4));

    // PC7 as RX (AF mode)
    GPIOC->MODER &= ~(3 << (7 * 2));
    GPIOC->MODER |= (2 << (7 * 2));
    GPIOC->AFR[0] |= (8 << (7 * 4));

    // Configure USART6
    USART6->CR1 |= (1 << 13);
    USART6->CR1 &= ~(1 << 12);// Enable USART
    USART6->CR2 &= ~(3 << 12);
    USART6->BRR = (16000000 + (9600/2)) / 9600; ; // Baud rate 9600
          // 8 data bits
    USART6->CR1 |= ((1 << 3)|(1<<2));//
   // USART6->DR|=(1<<0);// Enable transmitter

}


void USART_SENDCHAR(char c)
{
    while (!(USART6->SR & (1 << 7))); // Wait until TXE (Transmit data register empty) is set
    USART6->DR = c;
}

void USART_SENDSTRING(char *str)
{
    while (*str)
    {
        USART_SENDCHAR(*str++);
    }
}

char USART_READ()
{
    while (!(USART6->SR & (1 << 5))); // Wait until RXNE (Read data register not empty) is set
    return USART6->DR;
}

int main()
{
    USART_INIT();
    USART_SENDSTRING("Waiting for RFID data...\r\n");
    while (1)
    {
        char read = USART_READ();
        USART_SENDCHAR(read); // Echo received data
    }
}
