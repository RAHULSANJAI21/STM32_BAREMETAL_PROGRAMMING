#include "stm32f4xx.h"

void GPIO_INIT()
{
	RCC->AHB1ENR &=~((1<<2));
	RCC->AHB1ENR |=(1<<2);//Enable port C clock
	GPIOC->MODER &=~((1<<13)|(1<<12));
	GPIOC->MODER |=(1<<13);//Setting PC6 to alternate function
	GPIOC->AFR[0] &=~(0xF<< (6*4));
	GPIOC->AFR[0] |=(2<<(6*4));
}

void TIMER_INIT()
{
	RCC->APB1ENR |=(1<<1);
	TIM3->PSC=84-1;
	TIM3->ARR=1000-1;
	// Configure PWM mode 1 on CH1
	    TIM3->CCMR1 &= ~TIM_CCMR1_OC1M;
	    TIM3->CCMR1 |= ((1<<6)|(1<<5));

	    // Enable output for CH1
	    TIM3->CCER |= (1<<0);

	    // Enable auto-reload preload
	    TIM3->CR1 |= TIM_CR1_ARPE;
}

int main()
{
	GPIO_INIT();
	TIMER_INIT();
	int dutycycle=0,step=5;

	TIM3->CR1 |=(1<<0);
	while(1)
	{
		TIM3->CCR1=dutycycle;
		if(TIM3->SR & (1<<0))
		{
			TIM3->SR &=~((1<<0));
		    dutycycle+=step;

		    if(dutycycle >=1000|| dutycycle<=0)
		    {
		    	step= -step;
		    }
		}

	}
}

